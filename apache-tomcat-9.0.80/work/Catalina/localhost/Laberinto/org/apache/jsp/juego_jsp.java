/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2023-12-18 07:54:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import modelo.Laberinto;
import java.util.Random;

public final class juego_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("modelo.Laberinto");
    _jspx_imports_classes.add("java.util.Random");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    HttpSession sesion = request.getSession();
    String nick = "";
    if (request.getParameter("nick") == null) {
        nick = (String) sesion.getAttribute("nick");
    } else {
        nick = request.getParameter("nick");
        sesion.setAttribute("nick", nick);
    }
    Laberinto laberinto = (Laberinto) sesion.getAttribute("laberinto");
    if (laberinto == null) {
        laberinto = new Laberinto();
        laberinto.situarUsuario();
        laberinto.situarPersonajeMaligno();
        laberinto.situarRegalo();
        sesion.setAttribute("laberinto", laberinto);
    }
    if (request.getParameter("direccion") != null) {
        laberinto = (Laberinto) sesion.getAttribute("laberinto");
        String direccion = request.getParameter("direccion");
        laberinto.desplazarUsuario(direccion);
        Random random = new Random();
        int numeroAleatorio = random.nextInt(4) + 1;
        laberinto.desplazarPersonajeMaligno(numeroAleatorio);
        laberinto.mostrarCeldasAlrededor();
        sesion.setAttribute("laberinto", laberinto);
    }
    int filaUsuario = laberinto.getFilaUsuario();
    int columnaUsuario = laberinto.getColumnaUsuario();
    int filaPersonajeMaligno = laberinto.getFilaPersonajeMaligno();
    int columnaPersonajeMaligno = laberinto.getColumnaPersonajeMaligno();
    int filaRegalo = laberinto.getFilaRegalo();
    int columnaRegalo = laberinto.getColumnaRegalo();
    if (filaUsuario == filaPersonajeMaligno && columnaUsuario == columnaPersonajeMaligno) {
        response.sendRedirect("consolacion.jsp");
    }
    if (filaUsuario == filaRegalo && columnaUsuario == columnaRegalo) {
        response.sendRedirect("felicitacion.jsp");
    }

      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n");
      out.write("        <title>Juego 'Laberinto navide√±o'</title>\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"estilos/principal.css\">\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <p>INSTRUCCIONES: ");
      out.print( nick);
      out.write(", mueva su personaje por el laberinto en busca del regalo escondido, y evite que el personaje maligno lo alcance.</p>\n");
      out.write("        <hr>\n");
      out.write("        <div id=\"panelDeJuego\">\n");
      out.write("            <table>\n");
      out.write("                ");

                    int filas = laberinto.getNumFilas();
                    int columnas = laberinto.getNumColumnas();
                    char[][] mapa = laberinto.getMapa();
                    for (int i = 0; i < filas; i++) {
                        out.println("<tr>");
                        for (int j = 0; j < columnas; j++) {
                            out.println("<td>");
                            if (mapa[i][j] == Laberinto.PROTA) {
                                out.println("<img src='estilos/usuario.png'>");
                            } else if (mapa[i][j] == Laberinto.MALO_VISIBLE) {
                                out.println("<img src='estilos/grinch.png'>");
                            } else if (mapa[i][j] == Laberinto.PREMIO_VISIBLE) {
                                out.println("<img src='estilos/regalo.png'>");
                            } else if (mapa[i][j] == Laberinto.OBSTACULO_VISIBLE) {
                                out.println("<img src='estilos/muro.png'>");
                            } else if (mapa[i][j] == Laberinto.VACIO_VISIBLE) {
                                out.println("<img src='estilos/huellas.png'>");
                            }
                            out.println("</td>");
                        }
                        out.println("</tr>");
                    }
                
      out.write("\n");
      out.write("            </table>\n");
      out.write("            <form id=\"teclas\" method=\"post\">\n");
      out.write("                <input type=\"submit\" name=\"direccion\" value=\"Arriba\">\n");
      out.write("                <input type=\"submit\" name=\"direccion\" value=\"Derecha\">\n");
      out.write("                <input type=\"submit\" name=\"direccion\" value=\"Abajo\">\n");
      out.write("                <input type=\"Submit\" name=\"direccion\" value=\"Izquierda\"> \n");
      out.write("            </form>            \n");
      out.write("        </div>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
